labs(y="Number of Genotypes")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 1: 1/14/22 - 1/28/22 ")
e1graph
e2graph<-ggplot(data=e2_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "bottom")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=14))+
labs(y="")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 2: 2/12/22 - 2/23/22")
e2graph
e3graph<-ggplot(data=e3_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=14))+
labs(y="")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 3: 3/11 - 3/27")
e3graph
e3graph<-ggplot(data=e3_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=14))+
labs(y="")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 3: 3/11/22 - 3/27/22")
e3graph
e4graph<-ggplot(data=e4_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=14))+
labs(y="")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 4: 3/31/22 - 4/18/22")
e4graph
(e1graph+e2graph+e3graph+e4graph)+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
e1_long$state
levels(e1_long$state)
levels(e2_long$state)
levels(e3_long$state)
levels(e4_long$state)
View(e1_long)
is.na(e1_long$state)
anyNA(e1_long$state)
anyNA(e2_long$state)
anyNA(e3_long$state)
anyNA(e4_long$state)
exp4
View(exp4)
#move to a long format so that every row is now an observation of a colony at a single timepoint
e4_long <- gather(exp4, key=timept, value=state, Day.0:Day.18,factor_key = TRUE)
head(e4_long)
unique(e4_long$state)
exp4<-read.csv("Exp4_statusV032024.csv")
head(exp4)
#move to a long format so that every row is now an observation of a colony at a single timepoint
e4_long <- gather(exp4, key=timept, value=state, Day.0:Day.18,factor_key = TRUE)
head(e4_long)
#make the health states factors
e4_long$state<-factor(e4_long$state,levels=c("Healthy","Watch","Initial Disease","Diseased", "Removed"))
unique(e4_long$state)
anyNA(e4_long$state)
e4graph<-ggplot(data=e4_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=14))+
labs(y="")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 4: 3/31/22 - 4/18/22")
e4graph
(e1graph+e2graph+e3graph+e4graph)+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
e1graph<-ggplot(data=e1_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=12))+
labs(y="Number of Genotypes")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 1: 1/14/22 - 1/28/22 ")
e1graph
e3graph<-ggplot(data=e3_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=12))+
labs(y="Number of Genotypes")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 3: 3/11/22 - 3/27/22")
e3graph
(e1graph+e2graph+e3graph+e4graph)+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
(e1graph+e2graph+e3graph+e4graph)+plot_annotation(levels="A")+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
(e1graph+e2graph+e3graph+e4graph)+plot_annotation(level="A")+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
(e1graph+e2graph+e3graph+e4graph)+plot_annotation(tag_levels="A")+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
install.packages('ggimage')
library(ggimage)
install.packages('figpatch')
png::readPNG("Diseasedpic.png")
pic<-png::readPNG("Diseasedpic.png")
ExpRR<-ggplot(rrdata,aes(x=RRmed,y=Experiments))+
geom_point()+
geom_linerange(aes(xmax=rrdata$`97.5%`, xmin=rrdata$`2.5%`),col="black")+
geom_vline(xintercept=1,lwd=0.7)+
scale_x_log10(breaks=trans_breaks("log10",function(x) 10^x),labels = trans_format("log10", math_format(10^.x)))+
theme_bw()+annotation_logticks(sides="b")+labs(y="",x="Median Relative Risk",size=12)+theme(axis.text.y = element_text(size=12))
ExpRR+pic
ExpRR+inset_element(pic,0.1,0.8,1,1,align_to='full')
pic<-png::readPNG("Diseasedpic.png")
ExpRR+inset_element(pic,0.1,0.8,1,1,align_to='full')
pic<-png::readPNG("Diseasedpic.png",native=TRUE)
ExpRR+inset_element(pic,0.1,0.8,1,1,align_to='full')
ExpRR+inset_element(pic,0.1,0.8,1,)
ExpRR+inset_element(pic,0.1,0.8,1,1)
ExpRR+inset_element(pic,0.1,0.1,.1,.1)
ExpRR+inset_element(pic,1,1,1,1)
ExpRR+inset_element(pic,0.5,0.5,1,1)
ExpRR+inset_element(pic,1,1,.5,.5)
ExpRR+inset_element(pic,0.5,0.5,1,1)
ExpRR+inset_element(pic,0,0,1,1)
ggplot()
ggplot()+theme_bw()
blank<-ggplot()+theme_bw()
blank+inset_element(pic,0,0,1,1)
picgraph<-blank+inset_element(pic,0,0,1,1)
picgraph+ExpRR
picgraph+ExpRR+plot_annotation(tag_levels="A")
timeseries<-(e1graph+e2graph+e3graph+e4graph)+plot_annotation(tag_levels="A")+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
timeseries
picgraph+ExpRR+timeseries
(picgraph+ExpRR)/timeseries
(picgraph+ExpRR)/timeseries
(picgraph+ExpRR)/timeseries
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((picgraph+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ExpRR+grid::rasterGrob(pic)
grid::rasterGrob(pic)+ExpRR
(grid::rasterGrob(pic))+ExpRR
ExpRR+(grid::rasterGrob(pic))
ExpRR+(grid::rasterGrob(pic))/timeseries
(ExpRR+(grid::rasterGrob(pic)))/timeseries
```{r,fig.height=8,fig.width=8}
(ExpRR+(grid::rasterGrob(pic)))/timeseries
(ExpRR+(grid::rasterGrob(pic)))/timeseries+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((ExpRR+(grid::rasterGrob(pic)))/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
(((grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((wrap_elements(grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ggsave("Figure1.png",dpi=300)
((wrap_elements(grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ggsave("Figure1.png",dpi=300)
anyNA(e4_long$state)
e4graph<-ggplot(data=e4_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "none")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=12))+
labs(y="Number of Genotypes")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 4: 3/31/22 - 4/18/22")
e4graph
anyNA(e2_long$state)
e2graph<-ggplot(data=e2_long,mapping=aes(x=timept,fill=state))+
geom_bar(aes(fill=state))+
theme_bw()+
theme(panel.grid.minor =element_blank())+
theme(legend.position = "bottom")+
theme(axis.title.x=element_blank(),axis.title.y=element_text(size=12))+
labs(y="Number of Genotypes")+
scale_fill_manual(values=c("Healthy"="#00aae7","Watch"="#ebcc00","Initial Disease"="#f26522","Diseased"="firebrick","Removed"="#003041"), labels=c("Healthy","Watch","Initial Disease","Diseased","Removed"),drop=FALSE)+
theme(axis.text.x = element_text(angle=70, hjust=1,size=12))+
ylim(0,100)+
ggtitle("Experiment 2: 2/12/22 - 2/23/22")
e2graph
timeseries<-(e1graph+e2graph+e3graph+e4graph)+plot_annotation(tag_levels="A")+plot_layout(guides = 'collect') & theme(legend.position = 'bottom')
timeseries
((wrap_elements(grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ggsave("Figure1.png",dpi=300)
pic<-png::readPNG("Diseasedpic.png",native=TRUE)
(wrap_elements(grid::rasterGrob(pic),clip=FALSE)+ExpRR
)
((wrap_elements(grid::rasterGrob(pic),clip=FALSE)+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((wrap_elements(grid::rasterGrob(pic),clip=FALSE)+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ggsave("Figure1.png",dpi=300)
((wrap_elements(full=grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
((wrap_elements(full=grid::rasterGrob(pic))+ExpRR)/timeseries)+plot_layout(heights=c(1,2))+plot_annotation(tag_levels='A')
ggsave("Figure1.png",dpi=300)
#setwd("~/Documents/APAL Analysis")
library(phyloseq)
library(ggplot2)
library(vegan)
ps <- readRDS("ps_sp.rds")
ps
#need to add sample data
samdf<-read.csv("APALSampleData.csv", row.names=1)
samdf
#make sample data factors factors
samdf$Genotype<-as.factor(samdf$Genotype)
samdf$Date.sampled<-as.factor(samdf$Date.sampled)
samdf$Time.point<-as.factor(samdf$Time.point)
samdf$AGF<-as.factor(samdf$AGF)
samdf$Location<-as.factor(samdf$Location)
samdf$Lugols<-as.factor(samdf$Lugols)
samdf$System<-as.factor(samdf$System)
samdf$Type<-as.factor(samdf$Type)
samdf$Locsys <- as.factor(samdf$Locsys)
summary(samdf)
#makes a sample data table for phyloseq
sample.data <- sample_data(samdf)
#combine the sample data with the phyloseq object
sample_data(ps)<-sample.data
#see that it worked
ps
#get rid of 0 taxa
ps_clean <- prune_taxa(taxa_sums(ps) > 0, ps)
any(sample_sums(ps_clean) == 0) #reports FALSE if no zero taxa
#Remove Samples with less than 100 reads
ps_clean = prune_samples(sample_sums(ps_clean) > 100, ps_clean)
ps_clean
#You can filter taxa to remove taxa with small abundances, i.e. get rid of taxa that have less than 10 reads in 10% of the samples
ps_clean = filter_taxa(ps_clean, function(x) sum(x > 10) > (0.01*length(x)), TRUE)
ps_clean
#get rid of common contaminants
ps.filt<-subset_taxa(ps_clean, (Order!="Chloroplast") | is.na(Order))
ps.filt
sample_sums(ps.filt)
sum(sample_sums(ps.filt))
ps.filt<-subset_taxa(ps_clean, Order!="Chloroplast")
ps.filt
sum(sample_sums(ps.filt))
ps.filt
ps.filt<-subset_taxa(ps.filt,Family!="Mitochondria")
ps.filt
sum(sample_sums(ps.filt))
mean(sample_sums(ps.filt))
library("ggplot2")
library("phyloseq")
library("RColorBrewer")
library("reshape2")
library("nlme")
library("dplyr")
library("compositions")
library("tidyverse")
library("vegan")
its.tpotu<-read.csv("ITS2TypeProfile_otutable.csv",row.names = 1)
its.tptax<-read.csv("ITS2TypeProfile_taxinfo.csv")
rownames(its.tptax)<-paste('X',its.tptax$UID,sep="")
samdf<-read.csv("SampleDF.csv",row.names=1)
otumat<- as.matrix(its.tpotu)
otu <- otu_table(otumat, taxa_are_rows = FALSE)
taxmat <- as.matrix(its.tptax)
tax <- tax_table(taxmat)
sample.data <- sample_data(samdf)
ps <- phyloseq(otu, tax, sample.data)
ps
ps_gbtri<-subset_samples(ps,subset=population%in%c("GB.iso","TRI.iso","Field"))
ps_gbtri
ps_gbtri<-prune_taxa(taxa_sums(ps_gbtri) > 0, ps_gbtri)
ps_gbtri
df = as(sample_data(ps_gbtri), "data.frame") #you need to convert it to a dataframe first
#get your bray curtis distances
bcd = phyloseq::distance(ps_gbtri, "bray") #convert counts to bray curtis distances
df$Population <-as.factor(df$population)
levels(df$Population)<-c("Field","The Gene Bank","The Reef Institute")
df$TimePoint<-as.factor(df$collection_date)
levels(df$TimePoint)<-c("Field","Forty Five Days","Ninety Days")
#run the permanova by AGF
PERM <- adonis2(bcd ~ Population*TimePoint, blocks=df$Genotype, df)
#print your results
PERM
#transform data from raw abundance to relative abundance
physeq.f.ra.glom <- transform_sample_counts(ps_gbtri, function(x) x*100/sum(x))
#make otu table a dataframe
propData <- as.data.frame((otu_table(physeq.f.ra.glom)))
head(propData)
#set up your dataframe that will be used to make the relative abundance plot
plotDF1 <- propData %>% #within the propData variable
rownames_to_column(var="taxa") %>% #set the rownames (sample IDS) to a column
melt() %>% #takes the data from wide to long format
magrittr::set_names(c("sample", "taxa", "relab")) #rename columns
head(plotDF1)#inspect to make sure it worked
#extract the taxonomy info into something that can be combined with the plot dataframe
taxonomy.2 <- tax_table(physeq.f.ra.glom) %>%
as.data.frame() %>%
rownames_to_column(var="taxa") #add the rownames to a column called taxa
head(taxonomy.2)#just checking it worked
#combine dataframes merging by taxa, with the columns listed in select. ALSO CHANGE CLASS HERE IF YOU WANT A DIFFERENT TAXONOMIC RANK
plotDF1 <- left_join(plotDF1, taxonomy.2, by="taxa") %>% select(taxa, sample, relab, ITS2.type.profile)
head(plotDF1)#just checking it worked
sampdata<-data.frame(sample_data(physeq.f.ra.glom)) #make dataframe of the sample data
metadata.2 <- sampdata %>%
rownames_to_column(var="sample") #make a column of rownames (sample)
head(metadata.2)
#combine plotDF1 and metadata.2 by sample name
plotDF1 <- left_join(plotDF1, metadata.2, by="sample")
head(plotDF1) #just checking it worked
plotDF1$Population <-as.factor(plotDF1$population)
levels(plotDF1$Population)<-c("Field","The Gene Bank","The Reef Institute")
plotDF1$TimePoint<-as.factor(plotDF1$collection_date)
levels(plotDF1$TimePoint)<-c("Field","Forty Five Days","Ninety Days")
plotDF1$relab<-plotDF1$relab/100
#ASVs were first glommed and then counts were transformed into relative abundaces. ITS2 types that made up less than 5% of a sample's relative abundance were grouped into a <5% category to simplify the visualization in Figure 7.
#get rid of those <5%
aggregate(relab~ITS2.type.profile,data=plotDF1,FUN=sum)
plotDF1[plotDF1$relab <0.05, ]$ITS2.type.profile<-"low abundance"
head(plotDF1)
plotDF1$ITS2.type.profile<-factor(plotDF1$ITS2.type.profile)
plotDF1$relab
#check how many classes there are to determine how many colors you need
length(levels(plotDF1$ITS2.type.profile))
my.colors <- c("skyblue","skyblue4","orchid","orchid4","grey80")
#"orangered","palegreen2","palevioletred2"
#set the colors to an associated taxonomic rank. ALSO CHANGE CLASS HERE IF YOU WANT A DIFFERENT TAXONOMIC RANK
names(my.colors)<-levels(factor(plotDF1$ITS2.type.profile))
my.colors #confirm it worked
plotDF1$relab<-plotDF1$relab*100
ggplot(plotDF1, aes(x=MoteGeno, relab, fill=ITS2.type.profile)) +
#make it a barplot with classes stacked on top of each other
geom_bar(stat="identity", position = "stack") +
#set x-axis labels to be oriented vertically, and set the size of the text to 6.5
theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1)) +
#set the colors being filled in by class to the mycolors variable made earlier
scale_fill_manual(values = my.colors,limits =force) +
#facet wrap (separate out) by Region
facet_grid(~easy,space="free_x",scales="free_x",drop=TRUE,labeller=label_wrap_gen(19)) +
#set legend title size to 8 and legend text size to 6
theme(legend.text = element_text(size = 8),legend.position = "bottom")+
xlab("")+
ylab("Relative Abundance")+
labs(fill="")
plotDF1$easy<-paste(plotDF1$Population," at ",plotDF1$TimePoint)
plotDF1$easy<-as.factor(plotDF1$easy)
levels(plotDF1$easy)<-c("Field","The Gene Bank Forty Five Days", "The Gene Bank Ninety Days", "The Reef Institute Forty Five Days", "The Reef Institute Ninety Days")
plotDF1$relab<-plotDF1$relab*100
ggplot(plotDF1, aes(x=MoteGeno, relab, fill=ITS2.type.profile)) +
#make it a barplot with classes stacked on top of each other
geom_bar(stat="identity", position = "stack") +
#set x-axis labels to be oriented vertically, and set the size of the text to 6.5
theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1)) +
#set the colors being filled in by class to the mycolors variable made earlier
scale_fill_manual(values = my.colors,limits =force) +
#facet wrap (separate out) by Region
facet_grid(~easy,space="free_x",scales="free_x",drop=TRUE,labeller=label_wrap_gen(19)) +
#set legend title size to 8 and legend text size to 6
theme(legend.text = element_text(size = 8),legend.position = "bottom")+
xlab("")+
ylab("Relative Abundance")+
labs(fill="")
plotDF1$relab<-plotDF1$relab/100
ggplot(plotDF1, aes(x=MoteGeno, relab, fill=ITS2.type.profile)) +
#make it a barplot with classes stacked on top of each other
geom_bar(stat="identity", position = "stack") +
#set x-axis labels to be oriented vertically, and set the size of the text to 6.5
theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1)) +
#set the colors being filled in by class to the mycolors variable made earlier
scale_fill_manual(values = my.colors,limits =force) +
#facet wrap (separate out) by Region
facet_grid(~easy,space="free_x",scales="free_x",drop=TRUE,labeller=label_wrap_gen(19)) +
#set legend title size to 8 and legend text size to 6
theme(legend.text = element_text(size = 8),legend.position = "bottom")+
xlab("")+
ylab("Relative Abundance")+
labs(fill="")
ggplot(plotDF1, aes(x=MoteGeno, relab, fill=ITS2.type.profile)) +
#make it a barplot with classes stacked on top of each other
geom_bar(stat="identity", position = "stack") +
#set x-axis labels to be oriented vertically, and set the size of the text to 6.5
theme(axis.text.x = element_text(angle = 45,size = 8,hjust=1)) +
#set the colors being filled in by class to the mycolors variable made earlier
scale_fill_manual(values = my.colors,limits =force) +
#facet wrap (separate out) by Region
facet_grid(~easy,space="free_x",scales="free_x",drop=TRUE,labeller=label_wrap_gen(19)) +
#set legend title size to 8 and legend text size to 6
theme(legend.text = element_text(size = 8),legend.position = "bottom")+
xlab("")+
ylab("Relative Abundance")+
labs(fill="")
ggsave("relabund_ITS2.png",dpi=300)
library(phyloseq)
library(ggplot2)
library(vegan)
install.packages("multcompView")
library(multcompView)
ps <- readRDS("ps_pruned.rds") #import the .rds phyloseq object made in the intro to phyloseq notebook
ps #confirm it worked and look at structure again, 433 samples (yay!)
#subset sample data - Acer
acer_ps <- subset_samples(ps,Genus_Species =="Acropora_cervicornis")
acer_ps #289 samples
#subset by during and after 2023 marine heatwave
#Aug-Nov DURING
Aug_acer_ps <-subset_samples(acer_ps, CollectionMonth =="1_August")
Sept_acer_ps <-subset_samples(acer_ps, CollectionMonth =="2_September")
Nov_acer_ps <-subset_samples(acer_ps, CollectionMonth =="3_November")
acer_during_ps <-merge_phyloseq(Aug_acer_ps,Sept_acer_ps,Nov_acer_ps) #193 samples
#SR (during)
acer_during_SR <-subset_samples(acer_during_ps, SR.Founder == "SR") #128 samples
acer_during_SR_Condition <- subset_samples(acer_during_SR, Condition != "NA") #126 samples, 2 removed
#Founder (during)
acer_during_Founder <-subset_samples(acer_during_ps, SR.Founder == "Founder") #65 samples
#Dec-Jan AFTER
Dec_acer_ps <-subset_samples(acer_ps, CollectionMonth =="4_December")
Jan_acer_ps <-subset_samples(acer_ps, CollectionMonth =="5_January")
Feb_acer_ps <-subset_samples(acer_ps, CollectionMonth =="6_February")
acer_after_ps <-merge_phyloseq(Dec_acer_ps,Jan_acer_ps,Feb_acer_ps)
acer_after_ps <-merge_phyloseq(Dec_acer_ps,Jan_acer_ps,Feb_acer_ps)
#SR (after)
acer_after_SR <-subset_samples(acer_after_ps, SR.Founder == "SR") #48 samples
#Founder (after)
acer_after_Founder <-subset_samples(acer_after_ps, SR.Founder == "Founder") #48 samples
#Founder (after)
acer_after_Founder <-subset_samples(acer_after_ps, SR.Founder == "Founder") #48 samples
acerW_ps <- subset_samples(acer_ps, SiteName =="Looe")
acer_after_ps <-merge_phyloseq(Dec_acer_ps,Jan_acer_ps,Feb_acer_ps)
#SR (after)
acer_after_SR <-subset_samples(acer_after_ps, SR.Founder == "SR") #48 samples
#Founder (after)
acer_after_Founder <-subset_samples(acer_after_ps, SR.Founder == "Founder") #48 samples
acerW_ps <- subset_samples(acer_ps, SiteName =="Looe")
acerWNursery_ps <- subset_samples(acer_ps, SiteName =="Looe_Key_Nursery")
acer_after_ps <-merge_phyloseq(Dec_acer_ps,Jan_acer_ps,Feb_acer_ps)
#SR (after)
acer_after_SR <-subset_samples(acer_after_ps, SR.Founder == "SR") #48 samples
#Founder (after)
acer_after_Founder <-subset_samples(acer_after_ps, SR.Founder == "Founder") #48 samples
acerW_ps <- subset_samples(acer_ps, SiteName =="Looe")
acerWNursery_ps <- subset_samples(acer_ps, SiteName =="Looe_Key_Nursery")
acer32_ps <- subset_samples(acer_ps, SiteName =="Marker_32")
#SR (after)
acer_after_SR <-subset_samples(acer_after_ps, SR.Founder == "SR") #48 samples
#Founder (after)
acer_after_Founder <-subset_samples(acer_after_ps, SR.Founder == "Founder") #48 samples
acerW_ps <- subset_samples(acer_ps, SiteName =="Looe")
acerWNursery_ps <- subset_samples(acer_ps, SiteName =="Looe_Key_Nursery")
acer32_ps <- subset_samples(acer_ps, SiteName =="Marker_32")
acerSKNursery_ps <- subset_samples(acer_ps, SiteName =="Sand_Key_Nursery")
acer_SRFound_ps <-merge_phyloseq(acerW_ps,acerWNursery_ps,acer32_ps,acerSKNursery_ps,acerAA_ps)
acerAA_ps <-subset_samples(acer_ps, SiteName =="AA")
acer_SRFound_ps <-merge_phyloseq(acerW_ps,acerWNursery_ps,acer32_ps,acerSKNursery_ps,acerAA_ps)
acer_SRFound_ps #149 samples
acer_SR_ps <- subset_samples(acer_ps, SR.Founder =="SR") #SR only to look at cohort effects; 174 individuals
acer_SR_noNA_PG_ps <-subset_samples(acer_SR_ps, ParentGroup != "NA")
acer_Founder_ps <- subset_samples(acer_ps, SR.Founder =="Founder") #Founder to look at genotype effects; 113 individuals
acer_NoNAOutplantTime_ps <- subset_samples(acer_ps, Factor.Outplant.Time !="NA")
acer_SR_OutplantTime_ps <- subset_samples(acer_SR_ps, Factor.Outplant.Time !="NA") #176 individuals
acer_F_OutplantTime_ps <-subset_samples(acer_Founder_ps,Factor.Outplant.Time !="NA") #100 individuals
#get your sample data
acer_df = as(sample_data(acer_ps), "data.frame") #you need to convert it to a dataframe first
acer_during_df = as(sample_data(acer_during_ps), "data.frame") #during 2023 marine heat wave
acer_during_SR_df = as(sample_data(acer_during_SR), "data.frame") #SR during
acer_during_SR_Condition_df = as(sample_data(acer_during_SR_Condition), "data.frame") #SR during with NA condition removed
acer_during_Founder_df = as(sample_data(acer_during_Founder), "data.frame") #Founder during
acer_after_df = as(sample_data(acer_after_ps), "data.frame") #after 2023 marine heat wave
acer_after_SR_df = as(sample_data(acer_after_SR), "data.frame") #SR after
acer_after_Founder_df = as(sample_data(acer_after_Founder), "data.frame") #SR after
acer_SRFound_df = as(sample_data(acer_SRFound_ps), "data.frame") #Sites with SR and Founders
acer_SR_df = as(sample_data(acer_SR_noNA_PG_ps), "data.frame") #SR only with NAs removed
acer_Founder_df = as(sample_data(acer_Founder_ps), "data.frame") #Founder only
acer_OutplantTime_df = as(sample_data(acer_NoNAOutplantTime_ps), "data.frame") #Outplant Time (with NAs removed)
acer_SR_OutplantTime_df = as(sample_data(acer_SR_OutplantTime_ps), "data.frame") #SR Outplant Time
acer_F_OutplantTime_df = as(sample_data(acer_F_OutplantTime_ps), "data.frame") #Founder Outplant Time
#get your bray curtis distances
acer_d = phyloseq::distance(acer_ps, "bray") #convert counts to bray curtis distances
#get your bray curtis distances
acer_d = phyloseq::distance(acer_ps, "bray") #convert counts to bray curtis distances
acer_during_d = phyloseq::distance(acer_during_ps, "bray") #during 2023 marine heat wave
acer_during_SR_d = phyloseq::distance(acer_during_SR, "bray") #SR during
acer_during_d = phyloseq::distance(acer_during_ps, "bray") #during 2023 marine heat wave
acer_during_df$Outplant.Wild <- as.factor(acer_during_df$Outplant.Wild)
acer_during_df$Outcome <- as.factor(acer_during_df$Outcome)
acer_during_df$DominantSymbiont <- as.factor(acer_during_df$DominantSymbiont)
acer_during_df$Factor.Outplant.Time <- as.factor(acer_during_df$Factor.Outplant.Time)
acer_during_df$MoteUniversalID <- as.factor(acer_during_df$MoteUniversalID)
acer_during_df$Condition <- as.factor(acer_during_df$Condition)
acer_during_df$SiteName <- as.factor(acer_during_df$SiteName)
acer_during_PERMANOVA <- adonis2(acer_during_d ~ SR.Founder*Outcome*DominantSymbiont, acer_during_df)
acer_during_PERMANOVA
R.version
vegandocs
